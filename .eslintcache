[{"D:\\Shop-UTE\\client\\src\\components\\GlobalState.js":"1","D:\\Shop-UTE\\client\\src\\api\\ProductAPI.js":"2","D:\\Shop-UTE\\client\\src\\api\\DiscountAPI.js":"3","D:\\Shop-UTE\\client\\src\\components\\Pages\\Pages.js":"4","D:\\Shop-UTE\\client\\src\\components\\Pages\\Auth\\ResetPassword.js":"5","D:\\Shop-UTE\\client\\src\\components\\Pages\\Categories\\Categories.js":"6","D:\\Shop-UTE\\client\\src\\components\\Pages\\Cart\\Checkout.js":"7","D:\\Shop-UTE\\client\\src\\components\\Pages\\CreateAddress\\CreateAddress.js":"8","D:\\Shop-UTE\\client\\src\\components\\Pages\\Bill\\Bill.js":"9","D:\\Shop-UTE\\client\\src\\components\\Pages\\Admin\\CreateProduct\\CreateProduct.js":"10","D:\\Shop-UTE\\client\\src\\components\\Admin\\AdminHome\\AdminHome.js":"11","D:\\Shop-UTE\\client\\src\\components\\Pages\\Carousel\\Carousel.js":"12","D:\\Shop-UTE\\client\\src\\components\\Pages\\Item\\BtnRender.js":"13","D:\\Shop-UTE\\client\\src\\App.js":"14","D:\\Shop-UTE\\client\\src\\components\\Search\\Search.js":"15","D:\\Shop-UTE\\client\\src\\components\\Pages\\Auth\\Login.js":"16","D:\\Shop-UTE\\client\\src\\components\\Pages\\Products\\Products.js":"17","D:\\Shop-UTE\\client\\src\\components\\Pages\\TransitionHistory\\ViewDetailOrder.js":"18","D:\\Shop-UTE\\client\\src\\components\\Pages\\Discounts\\Discounts.js":"19","D:\\Shop-UTE\\client\\src\\components\\AdminDasboard\\Dasboard.js":"20","D:\\Shop-UTE\\client\\src\\components\\Pages\\ChangePassword\\ChangePassword.js":"21","D:\\Shop-UTE\\client\\src\\components\\Pages\\CreateAddress\\RenderAddresses.js":"22","D:\\Shop-UTE\\client\\src\\components\\Pages\\Cart\\RenderCart.js":"23","D:\\Shop-UTE\\client\\src\\components\\Sort\\Sort.js":"24","D:\\Shop-UTE\\client\\src\\components\\Pages\\Discounts\\RenderDiscount.js":"25","D:\\Shop-UTE\\client\\src\\api\\UserAPI.js":"26","D:\\Shop-UTE\\client\\src\\components\\ClientHeader\\ClientHeader.js":"27","D:\\Shop-UTE\\client\\src\\components\\Pages\\Auth\\ForgotPassword.js":"28","D:\\Shop-UTE\\client\\src\\components\\Pages\\Cart\\Cart.js":"29","D:\\Shop-UTE\\client\\src\\components\\Pages\\About\\About.js":"30","D:\\Shop-UTE\\client\\src\\components\\Pages\\Contact\\Contact.js":"31","D:\\Shop-UTE\\client\\src\\components\\Admin\\AdminUsers\\RenderUser.js":"32","D:\\Shop-UTE\\client\\src\\components\\Pages\\Cart\\PaypalButton.js":"33","D:\\Shop-UTE\\client\\src\\components\\Pages\\Home\\RenderHome.js":"34","D:\\Shop-UTE\\client\\src\\components\\Header\\Header.js":"35","D:\\Shop-UTE\\client\\src\\components\\Pages\\NotFound\\NotFound.js":"36","D:\\Shop-UTE\\client\\src\\components\\Pages\\DetailProduct\\RenderContent.js":"37","D:\\Shop-UTE\\client\\src\\components\\Loadding\\Loadding.js":"38","D:\\Shop-UTE\\client\\src\\components\\Filter\\Filter.js":"39","D:\\Shop-UTE\\client\\src\\components\\Footer\\Footer.js":"40","D:\\Shop-UTE\\client\\src\\components\\Pages\\Auth\\Register.js":"41","D:\\Shop-UTE\\client\\src\\components\\Pages\\TransitionHistory\\TransitionHisory.js":"42","D:\\Shop-UTE\\client\\src\\components\\Pages\\Home\\Home.js":"43","D:\\Shop-UTE\\client\\src\\components\\Pages\\ProductCategory\\ProductCategory.js":"44","D:\\Shop-UTE\\client\\src\\components\\Admin\\AdminProducts\\AdminProducts.js":"45","D:\\Shop-UTE\\client\\src\\components\\Admin\\AdminUsers\\AdminUser.js":"46","D:\\Shop-UTE\\client\\src\\components\\Pages\\Item\\ProductItem.js":"47"},{"size":1709,"mtime":1622736295408,"results":"48","hashOfConfig":"49"},{"size":2712,"mtime":1610248962352,"results":"50","hashOfConfig":"49"},{"size":622,"mtime":1621819287554,"results":"51","hashOfConfig":"49"},{"size":6009,"mtime":1622914951323,"results":"52","hashOfConfig":"49"},{"size":2237,"mtime":1610248962604,"results":"53","hashOfConfig":"49"},{"size":3513,"mtime":1619142635094,"results":"54","hashOfConfig":"49"},{"size":7326,"mtime":1621819736665,"results":"55","hashOfConfig":"49"},{"size":7661,"mtime":1621822009817,"results":"56","hashOfConfig":"49"},{"size":5122,"mtime":1619105360108,"results":"57","hashOfConfig":"49"},{"size":25233,"mtime":1623255941779,"results":"58","hashOfConfig":"49"},{"size":1232,"mtime":1618450870664,"results":"59","hashOfConfig":"49"},{"size":1827,"mtime":1610524162739,"results":"60","hashOfConfig":"49"},{"size":1302,"mtime":1610248962684,"results":"61","hashOfConfig":"49"},{"size":488,"mtime":1622905532432,"results":"62","hashOfConfig":"49"},{"size":886,"mtime":1617852684190,"results":"63","hashOfConfig":"49"},{"size":1745,"mtime":1623035514635,"results":"64","hashOfConfig":"49"},{"size":4243,"mtime":1623425319334,"results":"65","hashOfConfig":"49"},{"size":3114,"mtime":1622909428317,"results":"66","hashOfConfig":"49"},{"size":3893,"mtime":1622908606093,"results":"67","hashOfConfig":"49"},{"size":2122,"mtime":1619142054477,"results":"68","hashOfConfig":"49"},{"size":3011,"mtime":1617851767031,"results":"69","hashOfConfig":"49"},{"size":1402,"mtime":1610248962633,"results":"70","hashOfConfig":"49"},{"size":2654,"mtime":1623249252122,"results":"71","hashOfConfig":"49"},{"size":1035,"mtime":1610248962751,"results":"72","hashOfConfig":"49"},{"size":1909,"mtime":1622912947321,"results":"73","hashOfConfig":"49"},{"size":5110,"mtime":1623251480600,"results":"74","hashOfConfig":"49"},{"size":1335,"mtime":1617851552536,"results":"75","hashOfConfig":"49"},{"size":1119,"mtime":1617851679473,"results":"76","hashOfConfig":"49"},{"size":2107,"mtime":1620315366880,"results":"77","hashOfConfig":"49"},{"size":5000,"mtime":1610248962487,"results":"78","hashOfConfig":"49"},{"size":1410,"mtime":1610888867930,"results":"79","hashOfConfig":"49"},{"size":735,"mtime":1610426848774,"results":"80","hashOfConfig":"49"},{"size":2724,"mtime":1610248962614,"results":"81","hashOfConfig":"49"},{"size":2560,"mtime":1623256893558,"results":"82","hashOfConfig":"49"},{"size":4103,"mtime":1621820861703,"results":"83","hashOfConfig":"49"},{"size":65553,"mtime":1608963070664,"results":"84","hashOfConfig":"49"},{"size":529,"mtime":1617851818793,"results":"85","hashOfConfig":"49"},{"size":384,"mtime":1610248962457,"results":"86","hashOfConfig":"49"},{"size":1119,"mtime":1610248962431,"results":"87","hashOfConfig":"49"},{"size":3088,"mtime":1622905886465,"results":"88","hashOfConfig":"49"},{"size":1994,"mtime":1608256328555,"results":"89","hashOfConfig":"49"},{"size":4620,"mtime":1618450312514,"results":"90","hashOfConfig":"49"},{"size":3143,"mtime":1623257192652,"results":"91","hashOfConfig":"49"},{"size":2915,"mtime":1623256942323,"results":"92","hashOfConfig":"49"},{"size":2172,"mtime":1622913694249,"results":"93","hashOfConfig":"49"},{"size":3111,"mtime":1617851512945,"results":"94","hashOfConfig":"49"},{"size":2137,"mtime":1620314568237,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"trayoh",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"101"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"101"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"98"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"101"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"98"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"98"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"106"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"101"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"101"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Shop-UTE\\client\\src\\components\\GlobalState.js",[],["204","205"],"D:\\Shop-UTE\\client\\src\\api\\ProductAPI.js",[],["206","207"],"D:\\Shop-UTE\\client\\src\\api\\DiscountAPI.js",[],"D:\\Shop-UTE\\client\\src\\components\\Pages\\Pages.js",[],["208","209"],"D:\\Shop-UTE\\client\\src\\components\\Pages\\Auth\\ResetPassword.js",[],"D:\\Shop-UTE\\client\\src\\components\\Pages\\Categories\\Categories.js",["210"],"import axios from 'axios';\r\nimport React, { useState, useContext } from 'react';\r\nimport { GlobalState } from '../../GlobalState'\r\nimport Loadding from '../../Loadding/Loadding';\r\n\r\nimport Search from '../../Search/Search'\r\n\r\nfunction Categories() {\r\n    const state = useContext(GlobalState);\r\n    const [search, setSearch] = state.CategoryAPI.search\r\n    const [categories] = state.CategoryAPI.categories\r\n    const [token] = state.token\r\n\r\n    const [category, setCategory] = useState('');\r\n    const [callback, setCallback] = state.CategoryAPI.callback\r\n    const [onEdit, setOnEdit] = useState(false);\r\n    const [id, setID] = useState('')\r\n\r\n    const createOrUpdateCategory = async (e) => {\r\n        e.preventDefault();\r\n        if (onEdit) {\r\n            try {\r\n                const res = await axios.post(`/category/update/${id}`, { name: category }, {\r\n                    headers: { Authorization: token }\r\n                })\r\n                alert(res.data.msg)\r\n            } catch (error) {\r\n                return alert(error.response.data.msg)\r\n            }\r\n        }\r\n        else {\r\n            try {\r\n                const res = await axios.post('/category/create', { name: category }, {\r\n                    headers: { Authorization: token }\r\n                })\r\n                alert(res.data.msg)\r\n            } catch (error) {\r\n                return alert(error.response.data.msg)\r\n            }\r\n        }\r\n        setOnEdit(false)\r\n        setCallback(!callback)\r\n        setCategory('')\r\n    }\r\n    const deleteCategory = async id => {\r\n        console.log('llll');\r\n        try {\r\n            const res = await axios.delete(`/category/delete/${id}`, {\r\n                headers: { Authorization: token }\r\n            })\r\n            setCallback(!callback)\r\n            alert(res.data.msg)\r\n        } catch (error) {\r\n            return alert(error.response.data.msg)\r\n        }\r\n    }\r\n    const editCategory = (id, name) => {\r\n        setID(id)\r\n        setCategory(name)\r\n        setOnEdit(true)\r\n    }\r\n    const handleOnChange = (e) => {\r\n        setSearch(e.target.value.toLowerCase())\r\n    }\r\n    return (\r\n        <div className=\"categories\">\r\n            <Search search={search} handleOnChange={handleOnChange} />\r\n            <form onSubmit={createOrUpdateCategory}>\r\n                <label htmlFor=\"category\">Category:</label>\r\n                <input type=\"text\" name=\"category\" value={category}\r\n                    onChange={e => setCategory(e.target.value)} />\r\n                <button type=\"submit\">{onEdit ? \"Update\" : \"Save\"}</button>\r\n            </form>\r\n            <div className='render-categories'>\r\n                {\r\n                    categories.map((category => {\r\n                        return (\r\n                            <div key={category._id}>\r\n                                <div className=\"category\" key={category._id}>\r\n                                    <p>{category.name}</p>\r\n                                    {/* <button onClick={() => editCategory(category._id, category.name)}>edit</button> */}\r\n                                    <button onClick={() => deleteCategory(category._id)}>delete</button>\r\n                                </div>\r\n                                <hr></hr>\r\n                            </div>\r\n                        )\r\n                    }))\r\n                }\r\n            </div>\r\n            {categories.length === 0 && <Loadding />}\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default React.memo(Categories);","D:\\Shop-UTE\\client\\src\\components\\Pages\\Cart\\Checkout.js",["211"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport { GlobalState } from '../../GlobalState'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n// import socketIOClient from 'socket.io-client';\r\n\r\nimport PaypalButton from './PaypalButton'\r\nimport RenderAddresses from '../../Pages/CreateAddress/RenderAddresses'\r\n\r\nimport axios from 'axios'\r\n\r\nimport gotoshoping from '../../../images/shopping.png'\r\n\r\n// const ENDPOINT = \"http://localhost:3000\";\r\n\r\n// const socket = socketIOClient(ENDPOINT);\r\n\r\nfunction Checkout() {\r\n    const state = useContext(GlobalState)\r\n    const [cart, setCart] = state.UserAPI.cart;\r\n    const [token] = state.token\r\n    const [addresses] = state.UserAPI.addresses\r\n    const [address, setAddress] = useState(\"\");\r\n    const [callback, setCallback] = state.ProductAPI.callback;\r\n\r\n    const socket = state.socket;\r\n\r\n    let payments;\r\n    let deliveryCharges = 0;\r\n\r\n    const addToCart = async (cart) => {\r\n        // console.log(cart, \"af\");\r\n        await axios.post('/user/addcart', { cart },\r\n            {\r\n                headers: { Authorization: token }\r\n            })\r\n\r\n    }\r\n    const history = useHistory();\r\n\r\n    //get address, phone\r\n    const orderSubmit = async (payment) => {\r\n        // console.log(payment, 'payemnt');\r\n        if (payment.paymentID) {\r\n            payments = \"Paid\"\r\n        }\r\n        if (!address) return alert(\"You are not choose address\");\r\n        //if (!deliveryCharges) return alert(\"You are not choose address\");\r\n        try {\r\n            if (cart.length === 0) {\r\n                if (window.confirm('Your are have 0 items, Go to shopping')) {\r\n                    window.location.href = '/products'\r\n                }\r\n            }\r\n            await axios.post('/checkout', { cart, address: address, payments: payments, deliveryCharges, total: total }, {\r\n                headers: { Authorization: token }\r\n            });\r\n            await setCart([]);\r\n            await addToCart([]);\r\n            await setCallback(!callback)\r\n            await alert('You have successfully ordered');\r\n            socket.emit(\"client-sent-data\", { msg: \"You have a new order\" });\r\n            await history.push('/products');\r\n            await (window.location.href = \"/products\");\r\n        } catch (error) {\r\n            alert(error.response.data.msg);\r\n        }\r\n    }\r\n    const changeAddress = (item, index) => {\r\n        const chooseAddress = document.getElementsByClassName('choose')\r\n        for (let i = 0; i < chooseAddress.length; i++) {\r\n            if (chooseAddress[i].className === 'choose open') {\r\n                chooseAddress[i].classList.remove('open')\r\n            }\r\n        }\r\n        chooseAddress[index].classList.add('open');\r\n        setAddress(item);\r\n    }\r\n    // const tranSuccess = async (payment) => {\r\n    //     console.log(payment, 'ppm');\r\n    //     const { paymentID, address } = payment\r\n    //     await axios.post('/payment', { cart, address, paymentID }, {\r\n    //         headers: { Authorization: token }\r\n    //     });\r\n    //     setCart([]);\r\n    //     addToCart([]);\r\n    //     alert('Ban da order thanh cong');\r\n    // }\r\n    if (cart.length === 0)\r\n        return <div className=\"cart-empty\">\r\n            <h2 style={{ textAlign: 'center', fontSize: '5rem' }}>Order Empty</h2>\r\n            <img src={gotoshoping} alt=\"...\" />\r\n            <Link to='/products' className=\"shopping\">Go to Shopping</Link>\r\n        </div>\r\n    const totalAllCart = cart.reduce((prev, item) => {\r\n        return prev + item.count * item.prices\r\n    }, 0)\r\n    if (address) {\r\n        if (address.city.toLowerCase() === 'tp hồ chí minh') {\r\n            deliveryCharges = 0;\r\n        }\r\n        else {\r\n            deliveryCharges = 2;\r\n        }\r\n    }\r\n    const total = totalAllCart + deliveryCharges;\r\n    return (\r\n        <div className=\"check-out\">\r\n            <h2 className='out'>Checkout</h2>\r\n            <div className=\"infor\">\r\n                <div className='inf'>\r\n                    <h2>Choose delivery address</h2>\r\n                    {\r\n                        addresses.length === 0 ? <Link to='/address' className='create-address'>CreateAddress</Link> : <>\r\n                            {\r\n                                addresses.map((address, index) => {\r\n                                    return <div className=\"choose\" key={index}>\r\n                                        <RenderAddresses key={index} address={address} index={index} changeAddress={() => changeAddress(address, index)} />\r\n                                    </div>\r\n                                })\r\n                            }\r\n                        </>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"cart-box\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Image</th>\r\n                            <th>Name</th>\r\n                            <th>Quantity</th>\r\n                            <th>Prices</th>\r\n                            <th>Total Price</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            cart.map(item => {\r\n                                return <tr key={item._id}>\r\n                                    <td className='images'>\r\n                                        <img src={item.images} alt=\"...\" />\r\n                                    </td>\r\n                                    <td className=\"title\">{item.title}</td>\r\n                                    <td className=\"quantity\">\r\n                                        <span>{item.count}</span>\r\n                                    </td>\r\n                                    <td className=\"prices\">${item.prices}</td>\r\n                                    <td className=\"total-prices\">${(item.count * item.prices).toFixed(2)}</td>\r\n\r\n                                </tr>\r\n                            })\r\n                        }\r\n                        <tr>\r\n                            <td />\r\n                            <td />\r\n                            <td />\r\n                            <td>deliveryCharges</td>\r\n                            <td>${deliveryCharges}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div className='total x'>\r\n                    <input type=\"text\" placeholder=\"Your Discount Code\" className=\"discount\" />\r\n                </div >\r\n                <div className='total'>\r\n                    <h3>Grand Total: ${total.toFixed(2)}</h3>\r\n                    <div className='choose-payment'>\r\n                        <div className='home'>\r\n                            <label>Payment at home</label>\r\n                            <button onClick={orderSubmit}>Order </button>\r\n                        </div>\r\n                        <hr />\r\n                        <div className='online'>\r\n                            <label>Online Payment</label>\r\n                            <PaypalButton total={total} tranSuccess={orderSubmit} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        </div >\r\n    );\r\n}\r\nexport default React.memo(Checkout);","D:\\Shop-UTE\\client\\src\\components\\Pages\\CreateAddress\\CreateAddress.js",["212","213"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { GlobalState } from '../../GlobalState'\r\n\r\nimport RenderAddresses from './RenderAddresses'\r\nimport Loadding from '../../Loadding/Loadding';\r\n\r\nimport allAddresses from '../../../assets/addresses/address.json'\r\n\r\nconst initialState = {\r\n    name: '',\r\n    phone: '',\r\n    email: '',\r\n    inforAddress: ''\r\n}\r\nlet className = 'create-address'\r\nfunction Address() {\r\n    const state = useContext(GlobalState);\r\n    const [token] = state.token\r\n    const [addresses] = state.UserAPI.addresses\r\n    const [callback, setCallback] = state.UserAPI.callback\r\n    const [cities] = state.UserAPI.cities\r\n\r\n    const [address, setAddress] = useState(initialState)\r\n    const [city, setCity] = useState('')\r\n    const [district, setDistrict] = useState('')\r\n    const [ward, setWard] = useState('')\r\n    const [districts, setDistricts] = useState([])\r\n    const [wards, setWards] = useState([])\r\n\r\n    const [onDisplay, setOndisplay] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const getOneCity = allAddresses.find(item => {\r\n            return city === item.Name\r\n        })\r\n        //getNameCity để lấy ID\r\n        if (getOneCity) {\r\n            console.log(getOneCity.Districts);\r\n            setDistricts(getOneCity.Districts)\r\n        }\r\n    }, [city])\r\n    useEffect(() => {\r\n        const getOneDistrict = districts.find(item => {\r\n            return district === item.Name\r\n        })\r\n        if (getOneDistrict) {\r\n            setWards(getOneDistrict.Wards)\r\n        }\r\n    }, [district])\r\n    const handleChangeInput = (e) => {\r\n        const { name, value } = e.target\r\n        setAddress({ ...address, [name]: value })\r\n    }\r\n    const handleChangeCity = (e) => {\r\n        const { name, value } = e.target\r\n        setAddress({ ...address, [name]: value })\r\n        setCity(value)\r\n        setDistricts([])\r\n        setWards([])\r\n    }\r\n    const handleChangeDistrict = (e) => {\r\n        const { name, value } = e.target\r\n        setAddress({ ...address, [name]: value })\r\n        setDistrict(value)\r\n        setWards([])\r\n    }\r\n    const handleChangeWard = (e) => {\r\n        const { name, value } = e.target\r\n        setAddress({ ...address, [name]: value })\r\n        setWard(value)\r\n    }\r\n    const createOrUpdateAddress = async (e) => {\r\n        e.preventDefault();\r\n        if (!address.name || !address.phone || !address.email || (!city || city === \"Select a City\") ||\r\n            (!district || district === \"Select a District\") || (!ward || ward === \"Select a Ward\"))\r\n            return alert(\"Please fill out the form completely\")\r\n        try {\r\n            await axios.post(`/user/address`, { ...address }, {\r\n                headers: { Authorization: token }\r\n            })\r\n            setDistricts([]);\r\n            setWards([]);\r\n            setCity(\"\")\r\n            setDistrict(\"\")\r\n            setWard(\"\")\r\n            setAddress(initialState);\r\n        } catch (error) {\r\n            return alert(error.response.data.msg)\r\n        }\r\n        setCallback(!callback)\r\n        className = 'create-address';\r\n        return alert(\"add address\")\r\n    }\r\n    const showModal = () => {\r\n        className += ' show'\r\n        console.log(onDisplay);\r\n        setOndisplay(!onDisplay)\r\n    }\r\n    const CancleCreate = () => {\r\n        className = 'create-address'\r\n        console.log(onDisplay);\r\n        setOndisplay(!onDisplay)\r\n    }\r\n\r\n    return (\r\n        <div className='list-addresses'>\r\n            <h2 className='title-address'>Addresses-Book</h2>\r\n            <h3 className='new-address' onClick={showModal}>+ Add new address</h3>\r\n            <div className='display-addresses'>\r\n                {\r\n                    address.length === 0 && <Loadding />\r\n                }\r\n                {\r\n                    addresses.map((address, index) => {\r\n                        return <RenderAddresses address={address} key={index} index={index} />\r\n                    })\r\n                }\r\n            </div>\r\n            <div className={className}>\r\n                <form onSubmit={createOrUpdateAddress}>\r\n                    <div className=\"hang\">\r\n                        <div className='your-infor'>\r\n                            <h2>Your Information</h2>\r\n                            <div className='name'>\r\n                                <label htmlFor='name'>Name: </label>\r\n                                <input type='text' id='name' name='name' placeholder='fullName' onChange={handleChangeInput} value={address.name} />\r\n                            </div>\r\n                            <div className='phone'>\r\n                                <label htmlFor='phone'>Phone: </label>\r\n                                <input type='text' id='phone' name='phone' placeholder='Phone' onChange={handleChangeInput} value={address.phone} />\r\n                            </div>\r\n                            <div className='email'>\r\n                                <label htmlFor='email'>email: </label>\r\n                                <input type='email' id='email' name='email' placeholder='email' onChange={handleChangeInput} value={address.email} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='address-receive'>\r\n                            <h2>Address Receive</h2>\r\n                            <div className='city'>\r\n                                <select name='city' onChange={handleChangeCity}>\r\n                                    <option>Select a City</option>\r\n                                    {\r\n                                        allAddresses.map((city) => {\r\n                                            return <option key={city.Id} id={city.id}> {city.Name}</option>\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                            <select name='district' onChange={handleChangeDistrict}>\r\n                                <option>Select a District</option>\r\n                                {\r\n                                    districts.map((district) => {\r\n                                        return <option key={district.Id} id={district.Id}> {district.Name}</option>\r\n                                    })\r\n                                }\r\n                            </select>\r\n                            <select name='ward' onChange={handleChangeWard}>\r\n                                <option>Select a Ward</option>\r\n                                {\r\n                                    wards.map((ward) => {\r\n                                        return <option key={ward.Id} id={ward.Id}> {ward.Name}</option>\r\n                                    })\r\n                                }\r\n                            </select>\r\n                            <div className='inforAddress'>\r\n                                <label htmlFor='inforAddress'>Address: </label>\r\n                                <input type='inforAddress' id='inforAddress' name='inforAddress' placeholder='Address' onChange={handleChangeInput} value={address.inforAddress} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='fold'>\r\n                        <button type='submit' className='save'>Save</button>\r\n                        <p className='cancle' onClick={CancleCreate}>Cancle</p>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Address);","D:\\Shop-UTE\\client\\src\\components\\Pages\\Bill\\Bill.js",[],"D:\\Shop-UTE\\client\\src\\components\\Pages\\Admin\\CreateProduct\\CreateProduct.js",[],"D:\\Shop-UTE\\client\\src\\components\\Admin\\AdminHome\\AdminHome.js",["214","215","216"],"import React, { useContext, useState } from 'react';\r\nimport { XYPlot, VerticalBarSeries, XAxis, YAxis, VerticalGridLines, HorizontalGridLines } from 'react-vis';\r\n\r\nimport { GlobalState } from '../../GlobalState'\r\n\r\nimport './AdminHome.css'\r\n\r\nfunction AdminHome() {\r\n    const state = useContext(GlobalState)\r\n    const [history] = state.UserAPI.history\r\n    const checked = history.filter(item => item.status === true)\r\n\r\n    const [date, setDate] = useState(Date())\r\n    let data = []\r\n    const gidoll = checked.filter((item) => {\r\n        if (new Date(item.updatedAt).getFullYear() === new Date(date).getFullYear() && new Date(item.updatedAt).getMonth() === new Date(date).getMonth())\r\n            return item\r\n    })\r\n    gidoll.map((item, index) => {\r\n        data.push({ x: index, y: item.total })\r\n    })\r\n    // console.log(data);\r\n    return (\r\n        <div className=\"chart\">\r\n            <XYPlot height={400} width={400}>\r\n                <VerticalGridLines />\r\n                <HorizontalGridLines />\r\n                <XAxis width={80} />\r\n                <YAxis width={50} />\r\n                <VerticalBarSeries data={data} width={40} />\r\n            </XYPlot>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminHome;","D:\\Shop-UTE\\client\\src\\components\\Pages\\Carousel\\Carousel.js",[],"D:\\Shop-UTE\\client\\src\\components\\Pages\\Item\\BtnRender.js",[],"D:\\Shop-UTE\\client\\src\\App.js",[],"D:\\Shop-UTE\\client\\src\\components\\Search\\Search.js",[],"D:\\Shop-UTE\\client\\src\\components\\Pages\\Auth\\Login.js",[],"D:\\Shop-UTE\\client\\src\\components\\Pages\\Products\\Products.js",["217","218"],"import React, { useContext, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { GlobalState } from '../../GlobalState'\r\nimport ProductItem from '../Item/ProductItem'\r\nimport AdminProducts from '../../Admin/AdminProducts/AdminProducts'\r\nimport Filter from '../../Filter/Filter'\r\nimport Sort from '../../Sort/Sort'\r\nimport Pagination from '../../Pagination/Pagination'\r\n// import Loading from '../../Loadding/Loadding'\r\n\r\nfunction Products() {\r\n    const state = useContext(GlobalState)\r\n    console.log(state);\r\n    const [page, setPage] = state.ProductAPI.page\r\n    const [isAdmin] = state.UserAPI.isAdmin\r\n    const [token] = state.token\r\n    const [products] = state.ProductAPI.products\r\n    const [callback, setCallback] = state.ProductAPI.callback;\r\n    const socket = state.socket;\r\n    const handlePageChange = (page) => {\r\n        setPage(page)\r\n    }\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.on(\"add-product\", (data) => {\r\n                setCallback(!data);\r\n            })\r\n        }\r\n    }, [socket])\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.on(\"deleteDiscount\", (data) => {\r\n                setCallback(!data);\r\n            })\r\n        }\r\n    }, [socket])\r\n    if (products.length === 0) {\r\n        return <div className={isAdmin ? 'no-care' : \"care\"}>\r\n            <div className=\"filter-n-sort\">\r\n                {\r\n                    isAdmin &&\r\n                    <div className='create'>\r\n                        <Link to=\"/products/create\">Create Products</Link>\r\n                    </div>\r\n                }\r\n                <div className=\"filter-sort\">\r\n                    <Filter />\r\n                    <Sort />\r\n                </div>\r\n            </div>\r\n            {\r\n                !isAdmin && <div className=\"not-found-products\">\r\n                    <p>Not found products</p>\r\n                </div>\r\n            }\r\n        </div>\r\n    }\r\n    return (\r\n        <div className={isAdmin ? 'no-care' : \"care\"}>\r\n            <div className=\"filter-n-sort\">\r\n                <div className='create'>\r\n                    {\r\n                        isAdmin && <Link to=\"/products/create\">Create Products</Link>\r\n                    }\r\n                </div>\r\n                <div className=\"filter-sort\">\r\n                    <Filter />\r\n                    <Sort />\r\n                </div>\r\n            </div>\r\n            {products.length > 0 &&\r\n                (!isAdmin ?\r\n                    <div className='products'>\r\n                        {\r\n                            products.map(product => {\r\n                                return <ProductItem key={product._id} product={product} isAdmin={isAdmin}\r\n                                    token={token} callback={callback} setCallback={setCallback} />\r\n                            })\r\n                        }\r\n                    </div> :\r\n                    <div className='products-admin'>\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Image</th>\r\n                                    <th>Name</th>\r\n                                    <th>Quantity</th>\r\n                                    <th>Prices</th>\r\n                                    <th>Category</th>\r\n                                    <th>Solded</th>\r\n                                    <th>Update/Drop</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    products.map(product => {\r\n                                        return <AdminProducts key={product._id} product={product} isAdmin={isAdmin}\r\n                                            token={token} callback={callback} setCallback={setCallback} />\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )}\r\n            <Pagination page={page} handlePageChange={handlePageChange} products={products} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Products);","D:\\Shop-UTE\\client\\src\\components\\Pages\\TransitionHistory\\ViewDetailOrder.js",[],"D:\\Shop-UTE\\client\\src\\components\\Pages\\Discounts\\Discounts.js",[],"D:\\Shop-UTE\\client\\src\\components\\AdminDasboard\\Dasboard.js",[],"D:\\Shop-UTE\\client\\src\\components\\Pages\\ChangePassword\\ChangePassword.js",[],["219","220"],"D:\\Shop-UTE\\client\\src\\components\\Pages\\CreateAddress\\RenderAddresses.js",[],"D:\\Shop-UTE\\client\\src\\components\\Pages\\Cart\\RenderCart.js",[],"D:\\Shop-UTE\\client\\src\\components\\Sort\\Sort.js",["221"],"import React, { useContext } from 'react';\r\nimport { GlobalState } from '../GlobalState'\r\n\r\nfunction Sort() {\r\n    const state = useContext(GlobalState)\r\n    const [sort, setSort] = state.ProductAPI.sort\r\n    const [page, setPage] = state.ProductAPI.page\r\n    const handleSort = (e) => {\r\n        setSort(e.target.value)\r\n        setPage(1);\r\n    }\r\n    return (\r\n        <div className=\"sort-menu\">\r\n            <div className=\"row\">\r\n                <span>SortBy: </span>\r\n                <select value={sort} onChange={handleSort}>\r\n                    <option value=\"\">Newest</option>\r\n                    <option value=\"sort=oldest\">Oldest</option>\r\n                    <option value=\"sort=-prices\">Price: Hight-Low</option>\r\n                    <option value=\"sort=prices\">Price: Low-Hight</option>\r\n                    <option value=\"sort=-sold\">Hot Items: High-Low</option>\r\n                    {/* <option value=\"\"></option> */}\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sort;","D:\\Shop-UTE\\client\\src\\components\\Pages\\Discounts\\RenderDiscount.js",["222"],"import axios from 'axios';\r\nimport React, { useEffect } from 'react';\r\n\r\nfunction RenderDiscount({ discounts, token, callback, setCallback, socket }) {\r\n\r\n    const removeDiscount = async (id) => {\r\n        try {\r\n            if (window.confirm(\"You are sure delete this discount\")) {\r\n                const res = await axios.delete(`/discounts/delete/${id}`, {\r\n                    headers: { Authorization: token }\r\n                })\r\n                alert(res.data.msg);\r\n                setCallback(!callback);\r\n                await socket.emit(\"deleteDiscount\", callback);\r\n            }\r\n        } catch (error) {\r\n            return alert(error.response.data.msg)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"display-discount\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Category</th>\r\n                        <th>Discount</th>\r\n                        <th>From</th>\r\n                        <th>To</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {discounts.map((item, index) => {\r\n                        return <tr key={index}>\r\n                            <td>{item._id}</td>\r\n                            <td>{item.category}</td>\r\n                            <td>{item.discount}%</td>\r\n                            <td>{new Date(item.from).toLocaleDateString()}</td>\r\n                            <td>{new Date(item.to).toLocaleDateString()}</td>\r\n                            <td>\r\n                                <button onClick={() => removeDiscount(item._id)}>X</button>\r\n                            </td>\r\n                        </tr>\r\n                    }\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RenderDiscount;","D:\\Shop-UTE\\client\\src\\api\\UserAPI.js",["223"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'\r\n\r\nconst perPage = 10; //x\r\n\r\nfunction UserAPI(token) {\r\n    const [isLogged, setIsLogged] = useState(false)\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [cart, setCart] = useState([]);\r\n    const [history, setHistory] = useState([]);\r\n    const [callback, setCallback] = useState(false)\r\n    const [addresses, setAddresses] = useState([])\r\n    const [cities, setCities] = useState([])\r\n    const [users, setUsers] = useState([]);\r\n    const [user, setUser] = useState({})\r\n    const [page, setPage] = useState(1)\r\n\r\n    useEffect(() => {\r\n        // console.log(token, 'tk');\r\n        if (token) {\r\n            const getUser = async () => {\r\n                try {\r\n                    const res = await axios.get('/user/infor', {\r\n                        headers: { Authorization: token }\r\n                    });\r\n                    //console.log(res.data.user.role);\r\n                    if (res.data.user.isBlock === true) {\r\n                        window.location.href = '/login'\r\n                        return alert(\"This account was blocked\")\r\n                    }\r\n                    setIsLogged(true);\r\n                    setUser(res.data.user)\r\n                    setAddresses(res.data.user.addresses)\r\n                    res.data.user.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\r\n                    setCart(res.data.user.cart);\r\n                } catch (error) {\r\n                    alert(error)\r\n                }\r\n            }\r\n            getUser();\r\n        }\r\n    }, [token, callback])\r\n    const addCart = async (product) => {\r\n        if (product.discount > 0) {\r\n            product.prices = product.prices - (product.prices * product.discount) / 100;\r\n            console.log(product)\r\n        }\r\n        if (!isLogged) {\r\n            window.location.href = '/login';\r\n            return alert('please login to continue');\r\n        };\r\n        if (product.quantity === 0) {\r\n            return alert('this product has been sold out')\r\n        }\r\n        const check = cart.every(item => {\r\n            return item._id !== product._id\r\n        })\r\n        if (check) {\r\n            // console.log('test');\r\n            setCart([...cart, {\r\n                _id: product._id,\r\n                title: product.title,\r\n                count: 1,\r\n                prices: product.prices,\r\n                images: product.images.url\r\n            }])\r\n            await axios.post('/user/addcart', {\r\n                cart: [...cart,\r\n                {\r\n                    _id: product._id,\r\n                    title: product.title,\r\n                    count: 1,\r\n                    prices: product.prices,\r\n                    images: product.images.url\r\n                }]\r\n            }, { headers: { Authorization: token } })\r\n            return alert(\"added to cart\");\r\n        }\r\n        else {\r\n            const takeCart = cart.find(item => product._id === item._id)\r\n            // console.log(takeCart);\r\n            //console.log(takeCart.count, product.quantity);\r\n            if (takeCart.count + 1 > product.quantity) return alert(`Only ${product.quantity} products left in stock`)\r\n            cart.map(item => {\r\n                if (item._id === product._id) {\r\n                    item.count += 1;\r\n                }\r\n                return item;\r\n            })\r\n            // console.log(cart);\r\n            setCart(cart);\r\n            await axios.post('/user/addcart', {\r\n                cart: cart\r\n            }, { headers: { Authorization: token } })\r\n            return alert(\"added to cart\");\r\n            // return alert('This product has been added to cart');\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (token) {\r\n            const start = (page - 1) * perPage;\r\n            const end = (page * perPage);\r\n            const getHistory = async () => {\r\n                // console.log(isAdmin);\r\n                if (isAdmin) {\r\n                    const res = await axios.get('/checkout', {\r\n                        headers: { Authorization: token }\r\n                    })\r\n                    // console.log(res.data.checkouts);\r\n                    setHistory((res.data.checkouts).slice(start, end))\r\n                }\r\n                else {\r\n                    const res = await axios.get('/user/history', {\r\n                        headers: { Authorization: token }\r\n                    })\r\n                    setHistory((res.data).slice(start, end))\r\n                }\r\n            }\r\n            getHistory();\r\n        }\r\n    }, [token, isAdmin, callback, setHistory, page])\r\n    return {\r\n        isLogged: [isLogged, setIsLogged],\r\n        isAdmin: [isAdmin, setIsAdmin],\r\n        cart: [cart, setCart],\r\n        addresses: [addresses, setAddresses],\r\n        addCart: addCart,\r\n        history: [history, setHistory],\r\n        callback: [callback, setCallback],\r\n        cities: [cities, setCities],\r\n        users: [users, setUsers],\r\n        user: [user, setUser],\r\n        page: [page, setPage],\r\n    }\r\n}\r\n\r\nexport default UserAPI;","D:\\Shop-UTE\\client\\src\\components\\ClientHeader\\ClientHeader.js",[],"D:\\Shop-UTE\\client\\src\\components\\Pages\\Auth\\ForgotPassword.js",[],"D:\\Shop-UTE\\client\\src\\components\\Pages\\Cart\\Cart.js",[],"D:\\Shop-UTE\\client\\src\\components\\Pages\\About\\About.js",[],"D:\\Shop-UTE\\client\\src\\components\\Pages\\Contact\\Contact.js",["224"],"import React from 'react';\r\nimport '../Contact/Contact.css'\r\nfunction Contact() {\r\n    return (\r\n        <div className=\"page-wrapper bg-blue p-t-100 p-b-100 font-robo\">\r\n            <div className=\"wrapper wrapper--w680\">\r\n                <div className=\"card card-1\">\r\n                    <div className=\"card-heading\" />\r\n                    <div className=\"card-body\">\r\n                        <h2 className=\"title\">Contact Us</h2>\r\n                        <p className=\"text-contact\">Any questions so please contact:</p>\r\n                        <strong className=\"text-contact\">shop-ute@gmail.com</strong>\r\n                        <div className=\"map\">\r\n                            <span style={{ \"fontSize\": \"30px\" }}>Our Address:</span>\r\n                            <iframe allowfullscreen=\"\" aria-hidden=\"false\" tabindex=\"0\" frameborder=\"0\" className='map-iframe' src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3918.476514028973!2d106.7533891145204!3d10.851315392270688!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x317527bd80c66b4f%3A0x1243c8a70dc5d2e0!2zMSBWw7UgVsSDbiBOZ8OibiwgTGluaCBDaGnhu4N1LCBUaOG7pyDEkOG7qWMsIFRow6BuaCBwaOG7kSBI4buTIENow60gTWluaCwgVmnhu4d0IE5hbQ!5e0!3m2!1svi!2s!4v1610888496501!5m2!1svi!2s\"></iframe>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Contact;","D:\\Shop-UTE\\client\\src\\components\\Admin\\AdminUsers\\RenderUser.js",["225","226","227"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios'\r\n\r\nfunction RenderUser({ user, handleOnChangeAccount }) {\r\n    return (\r\n        <tr>\r\n            <td>{user.name}</td>\r\n            <td className='user-email'>{user.email}</td>\r\n            <td>{new Date(user.createdAt).toLocaleDateString()}</td>\r\n            <td>{new Date(user.updatedAt).toLocaleDateString()}</td>\r\n            <td>{user.isBlock === false\r\n                ? <button className='block-account' onClick={() => handleOnChangeAccount(user)}>BlockAcount</button>\r\n                : <button className='open-account' onClick={() => handleOnChangeAccount(user)}>Open Account</button>}</td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default RenderUser;","D:\\Shop-UTE\\client\\src\\components\\Pages\\Cart\\PaypalButton.js",[],"D:\\Shop-UTE\\client\\src\\components\\Pages\\Home\\RenderHome.js",[],"D:\\Shop-UTE\\client\\src\\components\\Header\\Header.js",[],"D:\\Shop-UTE\\client\\src\\components\\Pages\\NotFound\\NotFound.js",[],"D:\\Shop-UTE\\client\\src\\components\\Pages\\DetailProduct\\RenderContent.js",[],"D:\\Shop-UTE\\client\\src\\components\\Loadding\\Loadding.js",[],"D:\\Shop-UTE\\client\\src\\components\\Filter\\Filter.js",["228"],"D:\\Shop-UTE\\client\\src\\components\\Footer\\Footer.js",[],"D:\\Shop-UTE\\client\\src\\components\\Pages\\Auth\\Register.js",[],"D:\\Shop-UTE\\client\\src\\components\\Pages\\TransitionHistory\\TransitionHisory.js",[],"D:\\Shop-UTE\\client\\src\\components\\Pages\\Home\\Home.js",[],"D:\\Shop-UTE\\client\\src\\components\\Pages\\ProductCategory\\ProductCategory.js",[],"D:\\Shop-UTE\\client\\src\\components\\Admin\\AdminProducts\\AdminProducts.js",[],"D:\\Shop-UTE\\client\\src\\components\\Admin\\AdminUsers\\AdminUser.js",[],"D:\\Shop-UTE\\client\\src\\components\\Pages\\Item\\ProductItem.js",[],{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","replacedBy":"232"},{"ruleId":"229","replacedBy":"233"},{"ruleId":"231","replacedBy":"234"},{"ruleId":"229","replacedBy":"235"},{"ruleId":"231","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":57,"column":11,"nodeType":"239","messageId":"240","endLine":57,"endColumn":23},{"ruleId":"237","severity":1,"message":"241","line":1,"column":39,"nodeType":"239","messageId":"240","endLine":1,"endColumn":48},{"ruleId":"237","severity":1,"message":"242","line":22,"column":12,"nodeType":"239","messageId":"240","endLine":22,"endColumn":18},{"ruleId":"243","severity":1,"message":"244","line":50,"column":8,"nodeType":"245","endLine":50,"endColumn":18,"suggestions":"246"},{"ruleId":"237","severity":1,"message":"247","line":13,"column":18,"nodeType":"239","messageId":"240","endLine":13,"endColumn":25},{"ruleId":"248","severity":1,"message":"249","line":15,"column":42,"nodeType":"250","messageId":"251","endLine":15,"endColumn":44},{"ruleId":"248","severity":1,"message":"252","line":19,"column":30,"nodeType":"250","messageId":"253","endLine":19,"endColumn":32},{"ruleId":"243","severity":1,"message":"254","line":30,"column":8,"nodeType":"245","endLine":30,"endColumn":16,"suggestions":"255"},{"ruleId":"243","severity":1,"message":"254","line":37,"column":8,"nodeType":"245","endLine":37,"endColumn":16,"suggestions":"256"},{"ruleId":"229","replacedBy":"257"},{"ruleId":"231","replacedBy":"258"},{"ruleId":"237","severity":1,"message":"259","line":7,"column":12,"nodeType":"239","messageId":"240","endLine":7,"endColumn":16},{"ruleId":"237","severity":1,"message":"241","line":2,"column":17,"nodeType":"239","messageId":"240","endLine":2,"endColumn":26},{"ruleId":"237","severity":1,"message":"260","line":1,"column":8,"nodeType":"239","messageId":"240","endLine":1,"endColumn":13},{"ruleId":"261","severity":1,"message":"262","line":15,"column":29,"nodeType":"263","endLine":15,"endColumn":498},{"ruleId":"237","severity":1,"message":"241","line":1,"column":17,"nodeType":"239","messageId":"240","endLine":1,"endColumn":26},{"ruleId":"237","severity":1,"message":"264","line":1,"column":28,"nodeType":"239","messageId":"240","endLine":1,"endColumn":36},{"ruleId":"237","severity":1,"message":"265","line":2,"column":8,"nodeType":"239","messageId":"240","endLine":2,"endColumn":13},{"ruleId":"237","severity":1,"message":"259","line":8,"column":12,"nodeType":"239","messageId":"240","endLine":8,"endColumn":16},"no-native-reassign",["266"],"no-negated-in-lhs",["267"],["266"],["267"],["266"],["267"],"no-unused-vars","'editCategory' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'cities' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'districts'. Either include it or remove the dependency array.","ArrayExpression",["268"],"'setDate' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has a missing dependency: 'setCallback'. Either include it or remove the dependency array.",["269"],["270"],["266"],["267"],"'page' is assigned a value but never used.","'React' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'useState' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"273","fix":"275"},"Update the dependencies array to be: [district, districts]",{"range":"276","text":"277"},"Update the dependencies array to be: [setCallback, socket]",{"range":"278","text":"279"},{"range":"280","text":"279"},[1584,1594],"[district, districts]",[1055,1063],"[setCallback, socket]",[1236,1244]]